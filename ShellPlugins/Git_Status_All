#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - $HOME/ShellPlugins/Git_Status_All
# Started On        - Sat 16 Sep 14:19:06 BST 2017
# Last Change       - Tue 24 Oct 22:51:32 BST 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

gitsa(){
	ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }
	
	[ -x /usr/bin/git ] || {
		ERR "$LINENO" "Dependency '/usr/bin/git' not met."
		return 1
	}

	[ $UID -eq 0 ] && {
		ERR "$LINENO" "Root access isn't required."
		return 1
	}

	[ $# -eq 0 ] || {
		ERR "$LINENO" "Arguments not required."
		return 1
	}

	# Enter your own location where your repositories are stored. Each one is
	# assumed to be its own directory by the name of the repository itself.
	MY_GIT_STORAGE="$HOME/GitHub/terminalforlife/Personal"

	[ -d "$MY_GIT_STORAGE" ] || {
		ERR "$LINENO" "Unable to locate: $MY_GIT_STORAGE"
		return 1
	}

	# Store the current working directory here for returning to at the end.
	CURRENT_DIRECTORY="$PWD"

	# Begin the main processing.
	for DIR in $MY_GIT_STORAGE/* 'D+LqTAFĴ{!'; do
		#TODO - Remove that last empty space... somehow.
		if [ "$B" ] || [ "$C" ] || [ "$D" ] || [ "$E" ]; then
			[ "$DIR" == 'D+LqTAFĴ{!' ] || echo && break
		fi

		TITLE="false"
		unset B C D E
		#unset A B C D E

		[ -d "$DIR" ] || continue && cd "$DIR"

		while read -ra X; do
			case "${X[*]}" in
				#*nothing\ to\ commit,\ working\ directory\ clean*)
				#         A="true"
				#         [ "$TITLE" == "true" ] || TITLE="true" ;;
				*Changed\ to\ be\ committed\:*)
					B="true"
					[ "$TITLE" == "true" ] || TITLE="true" ;;
				*Changes\ not\ staged\ for\ commit\:*)
					C="true"
					[ "$TITLE" == "true" ] || TITLE="true" ;;
				*nothing\ added\ to\ commit\ but\ untracked\ files\ present\ \(use\ \"git\ add\"\ to\ track\)*)
					D="true"
					[ "$TITLE" == "true" ] || TITLE="true" ;;
				*Your\ branch\ is\ ahead\ of*)
					E="true"
					[ "$TITLE" == "true" ] || TITLE="true" ;;
			esac
		done <<< "$(/usr/bin/git status)"

		[ "$TITLE" == "true" ] && {
			#{ [ "$A" ] || [ "$B" ] || [ "$C" ] || [ "$D" ] || [ "$E" ]; } && {
			{ [ "$B" ] || [ "$C" ] || [ "$D" ] || [ "$E" ]; } && {
				echo "Status of ${DIR//*\/} repository:"
			}

			#[ "$A" ] && echo "    ⏵ Clean; nothing to commit."
			[ "$B" ] && echo "    ⏵ Changes to be committed."
			[ "$C" ] && echo "    ⏵ Changes yet to be staged for commit."
			[ "$D" ] && echo "    ⏵ Untracked files present."
			[ "$E" ] && echo "    ⏵ Commit(s) ready to be sent upstream."

			
			#{ [ "$A" ] || [ "$B" ] || [ "$C" ] || [ "$D" ] || [ "$E" ]; } && echo
		}

		# Change back to the previous directory.
		cd ..
	done

	# When all iterations are done in the above for loop, change back to the
	# directory you were in when you called this function.
	cd "$CURRENT_DIRECTORY"
}
