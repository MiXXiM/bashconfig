#!/bin/sh

#----------------------------------------------------------------------------------
# Project Name      - $HOME/ShellPlugins/Git_Status_All
# Started On        - Sat 16 Sep 14:19:06 BST 2017
# Last Change       - Fri 13 Oct 23:49:35 BST 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

gitsa(){
	# Load error functions.
	ERR(){ echo "ERROR: $1" 1>&2; }
	
	# Check for dependencies.
	DEPCOUNT=0
	for DEP in /usr/bin/git /usr/bin/basename /usr/bin/id /bin/grep; do
		[ -x "$DEP" ] || {
			ERR "Dependency '$DEP' not met."
			DEPCOUNT=$((DEPCOUNT+1))
		}
	done
	
	# Return if any dependencies were found.
	[ $DEPCOUNT -eq 0 ] || return 1

	# Check for root access.
	[ `/usr/bin/id -u` -eq 0 ] && {
		ERR "Root access isn't required."
		return 1
	}

	# Check for position parameters.
	[ $# -eq 0 ] || {
		ERR "Arguments not required."
		return 1
	}

	# Enter your own location where your repositories are stored. Each one is
	# assumed to be its own directory by the name of the repository itself.
	MY_GIT_STORAGE="$HOME/GitHub/terminalforlife/Personal"

	# Check that the above location exists.
	[ -d "$MY_GIT_STORAGE" ] || {
		ERR "Unable to locate: $MY_GIT_STORAGE"
		return 1
	}

	# Store the current working directory here for returning to at the end.
	CURRENT_DIRECTORY="$PWD"

	# Begin the main processing.
	for DIR in $MY_GIT_STORAGE/*; do
		[ -d "$DIR" ] || continue

		cd "$DIR"

		# Store the status of the current working directory.
		GIT_STATUS=`/usr/bin/git status`

		# Store just the directory name of the repository.
		GIT_NAME=`/usr/bin/basename "$DIR"`

		echo "Status of $GIT_NAME repository:"

		# Output status. Used separate statements in-case there are times
		# when multiple apply. Indented for an easier read.
		# (
		echo "$GIT_STATUS" | /bin/grep -qx "nothing to commit, working directory clean" && {
			echo "    ⏵ Clean; nothing to commit."
		}

		echo "$GIT_STATUS" | /bin/grep -qx "Changed to be committed:" && {
			echo "    ⏵ Changes to be committed."
		}

		echo "$GIT_STATUS" | /bin/grep -qx "Changes not staged for commit:" && {
			echo "    ⏵ Changes yet to be staged for commit."
		}

		echo "$GIT_STATUS" | /bin/grep -qx "nothing added to commit but untracked files present (use \"git add\" to track)" && {
			echo "    ⏵ Untracked files present."
		}

		echo "$GIT_STATUS" | /bin/grep -q "^Your branch is ahead of" && {
			echo "    ⏵ Commit(s) ready to be sent upstream."
		}
		# )

		# Add spacing to make it more readable.
		echo

		# Change back to the previous directory.
		cd ..
	done

	# When all iterations are done in the above for loop, change back to the
	# directory you were in when you called this function.
	cd "$CURRENT_DIRECTORY"
}
