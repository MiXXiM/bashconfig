#!/bin/sh

#----------------------------------------------------------------------------------
# Project Name      - $HOME/ShellPlugins/Git_Status_All
# Started On        - Sat 16 Sep 14:19:06 BST 2017
# Last Change       - Sat 16 Sep 16:19:53 BST 2017
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------

git_status_all()
{
	# Load error functions.
	RERR(){ echo "ERROR: $1" 1>&2; return; }
	ERR(){ echo "ERROR: $1" 1>&2; }
	
	# Check for dependencies.
	DEPCOUNT=0
	for DEP in /usr/bin/git /usr/bin/basename /usr/bin/id /bin/grep
	{
		if ! type -P "$DEP" &> /dev/null
		then
			ERR "Dependency '$DEP' not met."
			let DEPCOUNT++
		fi
	}
	
	# Return if any dependencies were found.
	[ $DEPCOUNT -eq 0 ] || return

	# Check for root access.
	[ `/usr/bin/id -u` -eq 0 ] && RERR "Root access isn't required."

	# Check for position parameters.
	[ $# -eq 0 ] || RERR "Arguments not required."

	# Enter your own location where your repositories are stored. Each one is
	# assumed to be its own directory by the name of the repository itself.
	MY_GIT_STORAGE="$HOME/GitHub/terminalforlife/Personal"

	# Check that the above location exists.
	if ! [ -d "$MY_GIT_STORAGE" ]
	then
		RERR "Unable to locate: $MY_GIT_STORAGE"
	fi

	# Store the current working directory here for returning to at the end.
	CURRENT_DIRECTORY="$PWD"

	# Begin the main processing.
	for DIR in $MY_GIT_STORAGE/*
	do
		[ -d "$DIR" ] || continue

		cd "$DIR"

		# Store the status of the current working directory.
		GIT_STATUS=`/usr/bin/git status`

		# Store just the directory name of the repository.
		GIT_NAME=`/usr/bin/basename "$DIR"`

		echo "Status of $GIT_NAME repository:"

		# Output status. Used separate statements in-case there are times
		# when multiple apply. Indented for an easier read.
		# (
		if echo "$GIT_STATUS" | /bin/grep -qx "nothing to commit, working directory clean"
		then
			echo "    ⏵ Clean; nothing to commit."
		fi

		if echo "$GIT_STATUS" | /bin/grep -qx "Changed to be committed:"
		then
			echo "    ⏵ Changes to be committed."
		fi

		if echo "$GIT_STATUS" | /bin/grep -qx "Changes not staged for commit:"
		then
			echo "    ⏵ Changes yet to be staged for commit."
		fi

		if echo "$GIT_STATUS" | /bin/grep -qx "nothing added to commit but untracked files present (use \"git add\" to track)"
		then
			echo "    ⏵ Untracked files present."
		fi
		# )

		# Add spacing to make it more readable.
		echo

		# Change back to the previous directory.
		cd ..
	done

	# When all iterations are done in the above for loop, change back to the
	# directory you were in when you called this function.
	cd "$CURRENT_DIRECTORY"
}
