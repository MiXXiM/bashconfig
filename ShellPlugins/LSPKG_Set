#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - $HOME/ShellPlugins/LSPKG_Set
# Started On        - Wed 24 Jan 17:31:41 GMT 2018
# Last Change       - Thu  8 Mar 05:41:07 GMT 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This is a ShellPlugin based on a function/alias (ls{ess,req,opt,ext,imp}pkgs)
# which used to be in $HOME/.bash_aliases but has since been revised and improved.
#
# The intention of this small plugin is to allow the user to enter the following
# commands to display certain sets of packages, hence the name:
#
# I may eventually incorporate this functionality into lspkg (see lspkg repository)
# as it strikes me as the perfect place for it, but this will suffice for now.
#----------------------------------------------------------------------------------

lspkg-set(){
	local _VERSION_="2018-03-08"

	ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

	USAGE(){
		while read -r; do
			printf "%s\n" "$REPLY"
		done <<-EOF
			            LSPKG-SET ($_VERSION_)
			            Written by terminalforlife (terminalforlife@yahoo.com)

			            Shell plugin to display sets of installed packages.

			SYNTAX:     lspkg-set [OPT]

			OPTS:       --help|-h|-?            - Displays this help information.
			            --version|-v            - Output only the version datestamp.
			            --essential|-E          - Display the essential packages.
			            --extra|-e              - Display the extra packages.
			            --required|-R           - Display the required packages.
			            --optional|-o           - Display the optional packages.
			            --important|-i          - Display the important packages.

			NOTE:       This small plugin parses /usr/bin/dpkg-query.
		EOF
	}

	case "$*" in
		--help|-h|-\?)
			USAGE; return 0 ;;
		--version|-v)
			printf "%s\n" "$_VERSION_"
			exit 0 ;;
		--essential|-E)
			TYPE="Essential:yes" ;;
		--extra|-e)
			TYPE="Priority:extra" ;;
		--required|-R)
			TYPE="Priority:required" ;;
		--optional|-o)
			TYPE="Priority:optional" ;;
		--important|-I)
			TYPE="Priority:important" ;;
		*)
			ERR "$LINENO" "Incorrect argument(s) specified."
			return 1 ;;
	esac

	if ! [ -x "/usr/bin/dpkg-query" ]; then
		ERR "$LINENO" "Dependency '/usr/bin/dpkg-query' not met."
		return 1
	fi

	local FMT1="\${db:Status-Abbrev} \${${TYPE%:*}} "
	local FMT2="\${Package} - \${Binary:Summary}\n"

	while read -a X; do
		if [ "${X[0]}" == "ii" -a "${X[1]}" == "${TYPE/*:}" ]; then
			printf -v INUM "%d" "$((${#X[@]}-1))"

			OLD="$NEW"
			NEW=$(
				for FIELD in `eval echo {2..$INUM}`; {
					printf "%s " "${X[$FIELD]}"
				}
			)

			[ "$NEW" == "$OLD" ] || printf "%s\n" "$NEW"
		fi
	done <<< "$(/usr/bin/dpkg-query --show -f="${FMT1}${FMT2}" \*)"
}

# vim: noexpandtab colorcolumn=84 tabstop=8 noswapfile nobackup
